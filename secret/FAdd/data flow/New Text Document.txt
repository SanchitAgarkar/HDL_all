
DataFlow
module fullAdd_256_258_260(
    input a,
    input b,
    input c,
    output sum,
    output carry
    );
    assign sum= a^b^c;
    assign carry=(a&b)|c&(a^b);
endmodule

gate Level
module fadd_gl_256_258_260(
    input a,
    input b,
    input c,
    output sum,
    output carry
    );
    
    wire x1,x2,x3;
    xor(x1,a,b);
    and(x3,a,b);
    xor(sum,x1,c);
    and(x2,x1,c);
    or(carry,x2,x3);
endmodule


behavioural modelling
module fadd_bm_256_258_260(
    input a,
    input b,
    input c,
    output reg sum,
    output reg carry
    );
    
    always @(*)
    begin
        {carry,sum}=a+b+c;
    end
endmodule

tb


module tb_fulladd_256_258_260;
reg a;
reg b;
reg c;
wire sum;
wire carry;

fullAdd_256_258_260 uut (.a(a),
                         .b(b),
                         .c(c),
                         .sum(sum),
                         .carry(carry));
                         
initial begin
    a=0;
    b=0;
    c=0;
    #100
    
    a=1;
    b=0;
    c=0;
    #100
    
    a=0;
    b=1;
    c=0;
    #100
    
    a=1;
    b=1;
    c=0;
    #100
    
    a=0;
    b=1;
    c=1;
    #100
    
    a=1;
    b=0;
    c=1;
    #100
    
    a=0;
    b=1;
    c=1;
    #100
    
    a=1;
    b=1;
    c=1;
  
end
endmodule