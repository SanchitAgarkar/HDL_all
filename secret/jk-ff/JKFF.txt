JKFF

module JKFF_260_258_256(j,k,clk,rst,q,qb);
input j,k,clk,rst;
output q,qb;
reg q;
always @(posedge clk)
begin
	if(rst)
	q<=0;
	else
		begin
		case({j,k})
		2'b00:q<=q;
		2'b01:q<=0;
		2'b10:q<=1;
		2'b11:q<=~q;
		
		endcase
		end
end
assign qb = ~q;
endmodule



TEST BENCH



module tb_JKFF_260_258_256;

	// Inputs
	reg j;
	reg k;
	reg clk;
	reg rst;

	// Outputs
	wire q;
	wire qb;

	// Instantiate the Unit Under Test (UUT)
	JKFF_260_258_256 uut (
		.j(j), 
		.k(k), 
		.clk(clk), 
		.rst(rst), 
		.q(q), 
		.qb(qb)
	);
	initial begin
	clk = 1;
	forever #10 clk=~clk;
	end
	
	initial begin
		// Initialize Inputs
		j = 0;
		k = 0;
		rst = 1;#20
		
		j = 1;
		k = 0;
		rst = 0;#20
		
		j = 0;
		k = 1;
		rst = 0;#20
		
		j = 1;
		k = 1;
		rst = 0;#20
		
		j = 0;
		k = 0;
		rst = 0;#20
		// Wait 100 ns for global reset to finish
		$stop;
        
		// Add stimulus here

	end
      
endmodule

